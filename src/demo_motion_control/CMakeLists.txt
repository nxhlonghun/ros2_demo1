cmake_minimum_required(VERSION 3.8)
project(demo_motion_control)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(pluginlib REQUIRED)



if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

include_directories(include)
add_library(spin_motion_controller SHARED src/spin_motion_controller.cpp)
ament_target_dependencies(spin_motion_controller pluginlib)

add_library(straight_motion_controller SHARED src/straight_motion_controller.cpp)
ament_target_dependencies(straight_motion_controller pluginlib)

add_library(turn_motion_controller SHARED src/turn_motion_controller.cpp)
ament_target_dependencies(turn_motion_controller pluginlib)

add_executable(test_plugin src/test_plugin.cpp)
ament_target_dependencies(test_plugin pluginlib)
install(TARGETS test_plugin
  DESTINATION lib/${PROJECT_NAME}
)

install(TARGETS spin_motion_controller straight_motion_controller turn_motion_controller
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION bin
)

install(DIRECTORY include/
  DESTINATION include/
)

pluginlib_export_plugin_description_file(demo_motion_control spin_motion_plugins.xml)
pluginlib_export_plugin_description_file(demo_motion_control turn_motion_plugins.xml)
pluginlib_export_plugin_description_file(demo_motion_control straight_motion_plugins.xml) 

ament_package()
